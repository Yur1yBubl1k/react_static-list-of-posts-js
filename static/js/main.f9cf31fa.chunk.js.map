{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","getCommentById","userId","commentsFromServer","filter","postId","postsFromServer","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAIL,qBAAKE,UAAU,oBAAf,SAAoCD,QCT3BG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,SCAGW,G,MAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOH,EAAlB,EAAkBA,KAAMR,EAAxB,EAAwBA,KAAMI,EAA9B,EAA8BA,SAA9B,OACtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SAA+BD,IAE/B,uBAEqB,IAApBI,EAASQ,OACN,mBAAG,UAAQ,oBAAX,6BACA,cAAC,EAAD,CAAaR,SAAUA,SCpBlBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCMtC,SAASS,EAAeC,GACtB,OAAOC,EAAmBC,QAAO,SAAArB,GAAO,OAAIA,EAAQsB,SAAWH,KAG1D,IAAMF,EAAQM,EAAgBf,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAVmBQ,EAUDN,EAAKM,OAThBK,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKF,KAAOU,MAUhDZ,SAAUW,EAAeL,EAAKJ,MAXhC,IAAqBU,KAaRO,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCpBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f9cf31fa.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{body}</div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: { title, user, body, comments } }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">{body}</p>\n\n    <hr />\n\n    {comments.length === 0\n      ? <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      : <CommentList comments={comments} />}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getCommentById(userId) {\n  return commentsFromServer.filter(comment => comment.postId === userId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}